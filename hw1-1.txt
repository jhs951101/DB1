create table movies (
id int primary key,
title varchar(200),
genres varchar(200)
);

load data local infile 'C:/movies.csv' into table movies 
fields terminated by ',' 
enclosed by '"'
lines terminated by '\n' 
ignore 1 lines;

create table users (
user_id int not null primary key,
age int,
gender char(1),
occupation varchar(50),
zip_code varchar(20)
);

load data local infile 'C:/users.csv' into table users 
fields terminated by '|' 
lines terminated by '\n' 
ignore 1 lines;

create table rating (
user_id int not null,
movie_id int not null,
rating int,
time_stamp bigint,
primary key (user_id, movie_id),
foreign key (user_id) references users(user_id)
on delete cascade on update cascade,
foreign key (movie_id) references movies(id)
on delete cascade on update cascade
);

load data local infile 'C:/rating.csv' into table rating fields terminated by ',';

create table tmdb_movies (
id int primary key,
title varchar(100),
genres varchar(1000),
original_title varchar(100),
popularity double,
release_date date,
budget decimal(15),
revenue decimal(15),
runtime int,
vote_average double,
vote_count int
);

load data local infile 'C:/tmdb-movies.csv' into table tmdb_movies 
fields terminated by ',' enclosed by '"' 
# ignore 1 lines
;

create table links (
movie_id int not null primary key,
imdb_id int,
tmdb_id int,
foreign key (movie_id) references movies(id)
on delete cascade on update cascade,
foreign key (tmdb_id) references tmdb_movies(id)
on delete cascade on update cascade
);

load data local infile 'C:/links.csv' into table links 
fields terminated by ',' lines terminated by '\n' ignore 1 lines
(movie_id, imdb_id, @vtmdb_id)
set tmdb_id = nullif(TRIM(@vtmdb_id),'');